/*
 * Copyright 2016 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories { jcenter() }
    dependencies { classpath 'io.reactivesocket:gradle-nebula-plugin-reactivesocket:1.0.6' }
}

description = 'ReactiveSocket: stream oriented messaging passing with Reactive Stream semantics.'

apply plugin: 'reactivesocket-project'

subprojects {
    apply plugin: 'reactivesocket-project'
    apply plugin: 'java'

    compileJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    repositories {
        jcenter()
        maven { url 'https://oss.jfrog.org/libs-snapshot' }
        maven { url 'https://dl.bintray.com/reactivesocket/ReactiveSocket' }
    }

    dependencies {
        compile 'org.reactivestreams:reactive-streams:1.0.0'
        compile 'org.slf4j:slf4j-api:1.7.21'

        testCompile 'junit:junit:4.12'
        testCompile 'org.mockito:mockito-core:1.10.19'
        testCompile "org.hamcrest:hamcrest-library:1.3"
        testCompile 'io.reactivex.rxjava2:rxjava:2.0.0-RC5'
        testCompile 'org.slf4j:slf4j-log4j12:1.7.21'
    }

    test {
        testLogging.showStandardStreams = true
    }
}

// support for snapshot/final releases via versioned branch names like 1.x
nebulaRelease {
    addReleaseBranchPattern(/\d+\.\d+\.\d+/)
    addReleaseBranchPattern('HEAD')
}

if (project.hasProperty('release.useLastTag')) {
    tasks.prepare.enabled = false
}
